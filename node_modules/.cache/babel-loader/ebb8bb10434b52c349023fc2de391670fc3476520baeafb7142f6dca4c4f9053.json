{"ast":null,"code":"var _jsxFileName = \"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Exercises.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Typography, Stack } from '@mui/material';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport ExerciseCard from '../components/ExerciseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercises = _ref => {\n  _s();\n  let {\n    exercises,\n    setExercises,\n    bodyPart\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const exercisesPerPage = 9;\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n  const paginate = (e, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: 'smooth'\n    });\n  };\n\n  // for bodyPart catorgories results\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n      if (bodyPart === 'all') {\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n      }\n      setExercises(exercisesData);\n    };\n    fetchExercisesData();\n  }, [bodyPart]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: '110px'\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      mb: \"46px\",\n      color: \"#b2becd\",\n      children: \"  Showing Results \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: '110px',\n          xs: '50px'\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      mt: \"100px\",\n      alignItems: \"center\",\n      color: \"#fff\",\n      children: exercises.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"primary\",\n        shape: \"circular\",\n        defaultPage: 1,\n        count: Math.ceil(exercises.length / exercisesPerPage),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\",\n        style: {\n          color: '#fff'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercises, \"GDYsIxij9y/ZFL42bMqqthZmeP4=\");\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Typography","Stack","exerciseOptions","fetchData","ExerciseCard","jsxDEV","_jsxDEV","Exercises","_ref","_s","exercises","setExercises","bodyPart","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","e","value","window","scrollTo","top","behavior","fetchExercisesData","exercisesData","id","sx","mt","lg","p","children","variant","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","xs","flexWrap","justifyContent","map","exercise","index","alignItems","length","shape","defaultPage","count","Math","ceil","page","onChange","size","style","_c","$RefreshReg$"],"sources":["/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Exercises.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport Pagination from '@mui/material/Pagination'\r\nimport { Box, Typography, Stack} from '@mui/material'\r\n\r\nimport { exerciseOptions, fetchData } from '../utils/fetchData'\r\nimport ExerciseCard from '../components/ExerciseCard';\r\n\r\nconst Exercises = ( { exercises, setExercises, bodyPart} ) => {\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const exercisesPerPage=9;\r\n  const indexOfLastExercise = currentPage * exercisesPerPage;\r\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\r\n  const paginate = (e, value) =>{\r\n    setCurrentPage(value);\r\n    window.scrollTo({top: 1800, behavior: 'smooth'})\r\n  }\r\n\r\n  // for bodyPart catorgories results\r\n  useEffect(() => {\r\n    const fetchExercisesData = async() =>{\r\n      let exercisesData = [];\r\n      if (bodyPart==='all') {\r\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises',exerciseOptions);\r\n      }else{\r\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`,exerciseOptions);\r\n      }\r\n      setExercises(exercisesData);\r\n    }\r\n    fetchExercisesData();\r\n  }, [bodyPart])\r\n  \r\n  \r\n  return (\r\n    <Box id=\"exercises\"\r\n         sx={{mt:{ lg: '110px' }}}\r\n         mt='50px'\r\n         p='20px'\r\n    >\r\n      <Typography variant=\"h3\" mb=\"46px\" color=\"#b2becd\">  Showing Results </Typography>\r\n      <Stack direction=\"row\" sx={{ gap: { lg: '110px', xs: '50px'}}} flexWrap=\"wrap\" justifyContent='center'>\r\n          {currentExercises.map((exercise, index) =>(\r\n            <ExerciseCard key={index} exercise={exercise} />\r\n          )\r\n          )}\r\n      </Stack>\r\n      <Stack mt=\"100px\" alignItems=\"center\" color=\"#fff\">\r\n            {exercises.length > 9 && (\r\n              <Pagination\r\n                color=\"primary\"\r\n                shape=\"circular\"\r\n                defaultPage={1}\r\n                count={Math.ceil(exercises.length / exercisesPerPage)}\r\n                page={currentPage}\r\n                onChange={paginate}\r\n                size=\"large\"\r\n                style={{color: '#fff'}}\r\n               />\r\n            )}\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Exercises"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}