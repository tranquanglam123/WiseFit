[{"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/index.js":"1","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/App.js":"2","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/pages/Home.js":"3","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/pages/ExcersiceDetail.js":"4","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/pages/BmiCalculator.js":"5","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Navbar.jsx":"6","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Footer.jsx":"7","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/HeroBanner.jsx":"8","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/SearchExercises.jsx":"9","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/ExerciseVideos.jsx":"10","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Exercises.jsx":"11","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/SimilarExercises.jsx":"12","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/utils/fetchData.js":"13","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Detail.jsx":"14","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/HorizontalScrollBar.jsx":"15","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/ExerciseCard.jsx":"16","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Loader.jsx":"17","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/BodyPart.jsx":"18","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/pages/User.js":"19","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Connect.jsx":"20","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Sign.jsx":"21","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/pages/Form.js":"22"},{"size":328,"mtime":1685356411583,"results":"23","hashOfConfig":"24"},{"size":286,"mtime":1685357296986,"results":"25","hashOfConfig":"24"},{"size":717,"mtime":1684920859774,"results":"26","hashOfConfig":"24"},{"size":2229,"mtime":1658800026000,"results":"27","hashOfConfig":"24"},{"size":3522,"mtime":1658800026000,"results":"28","hashOfConfig":"24"},{"size":1187,"mtime":1685357296986,"results":"29","hashOfConfig":"24"},{"size":674,"mtime":1684255429000,"results":"30","hashOfConfig":"24"},{"size":1387,"mtime":1684920333538,"results":"31","hashOfConfig":"24"},{"size":2812,"mtime":1684255680000,"results":"32","hashOfConfig":"24"},{"size":1545,"mtime":1658800026000,"results":"33","hashOfConfig":"24"},{"size":2313,"mtime":1658800026000,"results":"34","hashOfConfig":"24"},{"size":1258,"mtime":1684256152000,"results":"35","hashOfConfig":"24"},{"size":762,"mtime":1684238251000,"results":"36","hashOfConfig":"24"},{"size":2007,"mtime":1658800026000,"results":"37","hashOfConfig":"24"},{"size":1465,"mtime":1658800026000,"results":"38","hashOfConfig":"24"},{"size":1029,"mtime":1658800026000,"results":"39","hashOfConfig":"24"},{"size":324,"mtime":1684256322000,"results":"40","hashOfConfig":"24"},{"size":977,"mtime":1658800026000,"results":"41","hashOfConfig":"24"},{"size":197,"mtime":1684920331363,"results":"42","hashOfConfig":"24"},{"size":2152,"mtime":1685000287083,"results":"43","hashOfConfig":"24"},{"size":3547,"mtime":1685357296986,"results":"44","hashOfConfig":"24"},{"size":2361,"mtime":1685357296986,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vigee",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/index.js",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/App.js",["116","117","118"],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/pages/Home.js",[],[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/pages/ExcersiceDetail.js",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/pages/BmiCalculator.js",["119"],[],"// Find body mass index value (BMI) with this endpoint.\r\n//  You just need to enter three parameters which are age, weight (kg), and height(cm) information.\r\n\r\n// url with\r\n// const BMICalUrl = 'https://fitness-calculator.p.rapidapi.com/bmi?age=25&weight=65&height=180';\r\n\r\n// {3 items\r\n//     \"status_code\":200\r\n//     \"request_result\":\"Successful\"\r\n//     \"data\":{3 items\r\n//     \"bmi\":20.06\r\n//     \"health\":\"Normal\"\r\n//     \"healthy_bmi_range\":\"18.5 - 25\"\r\n//     }\r\n// }\r\n\r\nimport React, { useEffect, useState} from 'react';\r\nimport { Box, Stack, Typography, TextField, Button } from '@mui/material';\r\nimport { fetchData, BMIOptions } from '../utils/fetchData';\r\n\r\n\r\nconst BmiCalculator = () => {    \r\n    // set state of weight,height and age\r\n    const [weight, setWeight] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [age, setAge] = useState();\r\n    const [BMI, setBMI] = useState(\"Not Calcualted\");\r\n    const [health, setHealth] = useState('Not Calcualted');\r\n    const [healthyBmiRange, setHealthyBmiRange] = useState('Not Calcualted');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n        const fetchBMICalData = async() =>{            \r\n            if( (weight > 40 && weight < 160) && (height > 130 && height < 230) && (age > 0 && age < 80) ){                \r\n                const BMIData = await fetchData(`https://fitness-calculator.p.rapidapi.com/bmi?age=${age}&weight=${weight}&height=${height}`, BMIOptions);\r\n                setLoading(true);            \r\n                if(BMIData.status_code === 200){\r\n                    console.log(BMIData);\r\n                    setBMI(BMIData.data.bmi);\r\n                    setHealth(BMIData.data.health);\r\n                    setHealthyBmiRange(BMIData.data.healthy_bmi_range);\r\n                }else{\r\n                    alert('Unable to fetch data from API');\r\n                }                       \r\n                window.scrollTo({top: 1400, behavior: 'smooth'});\r\n            }\r\n            else{\r\n                alert('Please enter valid values');\r\n            }\r\n        }\r\n    \r\n\r\n  return (\r\n    <div>\r\n    <Stack p=\"80px\" gap=\"30px\" backgroundColor=\"#FFF\" width=\"90%\" margin=\"auto\" mt=\"100px\" >\r\n        <TextField type=\"number\"  placeholder='Your Weight in Kg(must be 40kg to 160kg in range)' onChange={(e)=> setWeight(e.target.value) } />\r\n        <TextField type=\"number\" placeholder='Your Height in CM (must be 130cm to 230cm in range)' onChange={(e)=> setHeight(e.target.value) } />\r\n        <TextField type=\"number\" placeholder='Your Age(must be 0 to 80 in range)' onChange={(e)=> setAge(e.target.value) }  />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={fetchBMICalData} disabled={loading}>Calculate BMI</Button>                \r\n    </Stack>\r\n    {BMI===\"Not Calcualted\" ? '' :\r\n    <Stack  p=\"80px\" gap=\"30px\" backgroundColor=\"#FFF\" width=\"90%\" margin=\"auto\" mt=\"100px\">\r\n        <Typography variant=\"h3\">BMI Results</Typography>\r\n        <Box>\r\n            <Typography variant=\"h5\">BMI: <span style={{color: '#ffb700', fontWeight:\"600\", fontSize: \"40px\" }}>{BMI}</span></Typography>\r\n            <Typography variant=\"h5\">HEALTH: <span style={{color: '#ffb700', fontWeight:\"600\", fontSize: \"40px\" }}>{health}</span></Typography>\r\n            <Typography variant=\"h5\">HEALTH_BMI_RANGE: <span style={{color: '#ffb700', fontWeight:\"600\", fontSize: \"40px\" }}>{healthyBmiRange}</span></Typography>\r\n        </Box>\r\n    </Stack>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BmiCalculator","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Navbar.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Footer.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/HeroBanner.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/SearchExercises.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/ExerciseVideos.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Exercises.jsx",["120"],[],"import React, {useEffect, useState} from 'react'\r\nimport Pagination from '@mui/material/Pagination'\r\nimport { Box, Typography, Stack} from '@mui/material'\r\n\r\nimport { exerciseOptions, fetchData } from '../utils/fetchData'\r\nimport ExerciseCard from '../components/ExerciseCard';\r\n\r\nconst Exercises = ( { exercises, setExercises, bodyPart} ) => {\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const exercisesPerPage=9;\r\n  const indexOfLastExercise = currentPage * exercisesPerPage;\r\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\r\n  const paginate = (e, value) =>{\r\n    setCurrentPage(value);\r\n    window.scrollTo({top: 1800, behavior: 'smooth'})\r\n  }\r\n\r\n  // for bodyPart catorgories results\r\n  useEffect(() => {\r\n    const fetchExercisesData = async() =>{\r\n      let exercisesData = [];\r\n      if (bodyPart==='all') {\r\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises',exerciseOptions);\r\n      }else{\r\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`,exerciseOptions);\r\n      }\r\n      setExercises(exercisesData);\r\n    }\r\n    fetchExercisesData();\r\n  }, [bodyPart])\r\n  \r\n  \r\n  return (\r\n    <Box id=\"exercises\"\r\n         sx={{mt:{ lg: '110px' }}}\r\n         mt='50px'\r\n         p='20px'\r\n    >\r\n      <Typography variant=\"h3\" mb=\"46px\" color=\"#b2becd\">  Showing Results </Typography>\r\n      <Stack direction=\"row\" sx={{ gap: { lg: '110px', xs: '50px'}}} flexWrap=\"wrap\" justifyContent='center'>\r\n          {currentExercises.map((exercise, index) =>(\r\n            <ExerciseCard key={index} exercise={exercise} />\r\n          )\r\n          )}\r\n      </Stack>\r\n      <Stack mt=\"100px\" alignItems=\"center\" color=\"#fff\">\r\n            {exercises.length > 9 && (\r\n              <Pagination\r\n                color=\"primary\"\r\n                shape=\"circular\"\r\n                defaultPage={1}\r\n                count={Math.ceil(exercises.length / exercisesPerPage)}\r\n                page={currentPage}\r\n                onChange={paginate}\r\n                size=\"large\"\r\n                style={{color: '#fff'}}\r\n               />\r\n            )}\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Exercises","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/SimilarExercises.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/utils/fetchData.js",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Detail.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/HorizontalScrollBar.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/ExerciseCard.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Loader.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/BodyPart.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/pages/User.js",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Connect.jsx",["121","122"],[],"import React, { useState } from 'react';\nimport { Button, Typography, Box } from '@mui/material';\nimport RapidoScale  from '../assets/images/scale.jpg';\nimport MiBand3  from '../assets/images/1_Mi_Band_3.jpg';\nconst Connect = () => {\n  const [batteryLevel, setBatteryLevel] = useState(null);\n  const [connectedDevice, setConnectedDevice] = useState(null);\n\n  const handleConnect = async () => {\n    try {\n      const device = await navigator.bluetooth.requestDevice({\n        //filters: [{ services: ['battery_service'] }],\n        acceptAllDevices:true\n      });\n\n      const server = await device.gatt.connect();\n      const service = await server.getPrimaryService('battery_service');\n      const battery = await service.getCharacteristic('battery_level');\n      const batteryValue = await battery.readValue();\n      const batteryLevel = batteryValue.getUint8(0);\n\n      setConnectedDevice(device);\n      setBatteryLevel(batteryLevel);\n\n      // Additional operations with the connected device and battery info\n\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle connection failure or display an error message\n    }\n  };\n\n  return (\n    <Box\n      display='flex'\n      flexDirection='column'\n      justifyContent='center'\n      alignItems='center'\n      minHeight='100vh'\n    >\n      <Typography marginTop='50px' variant='h2' fontWeight='700' gutterBottom color='#ffffff'>\n        CONNECT FOR RECOMMENDATION\n      </Typography>\n\n      {/*Connect to the BLE device*/}\n      <Button variant='contained' color='primary' size='large' onClick={handleConnect}>\n        Connect\n      </Button>\n      <Typography marginTop='100px' fontWeight='800' fontSize='40px' color='#ffffff'>\n        DEVICES THAT WE SUPPORT\n      </Typography>\n      <Box display='flex' justifyContent='center' alignItems='center' mt={2}>\n        {/* Add your images here */}\n        <img src={RapidoScale} alt=\"Rapido Scale\" style={{ width: '600px', height: '600px', objectFit: 'cover' }} />\n        <img src={MiBand3} alt=\"Mi Band 3\" style={{ width: '600px', height: '600px', objectFit: 'cover' }} />\n\n      </Box>\n    </Box>\n  );\n}\n\nexport default Connect;\n","/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/components/Sign.jsx",[],[],"/home/quanglam/Desktop/Gym-exercises-web-app-with-react-js-main/src/pages/Form.js",["123","124","125","126","127","128"],[],{"ruleId":"129","severity":1,"message":"130","line":3,"column":27,"nodeType":"131","messageId":"132","endLine":3,"endColumn":33},{"ruleId":"129","severity":1,"message":"133","line":3,"column":35,"nodeType":"131","messageId":"132","endLine":3,"endColumn":40},{"ruleId":"129","severity":1,"message":"134","line":3,"column":42,"nodeType":"131","messageId":"132","endLine":3,"endColumn":48},{"ruleId":"129","severity":1,"message":"135","line":17,"column":17,"nodeType":"131","messageId":"132","endLine":17,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":32,"column":6,"nodeType":"138","endLine":32,"endColumn":16,"suggestions":"139"},{"ruleId":"129","severity":1,"message":"140","line":6,"column":10,"nodeType":"131","messageId":"132","endLine":6,"endColumn":22},{"ruleId":"129","severity":1,"message":"141","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":25},{"ruleId":"129","severity":1,"message":"142","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"143","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":18},{"ruleId":"129","severity":1,"message":"144","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":19},{"ruleId":"129","severity":1,"message":"145","line":9,"column":8,"nodeType":"131","messageId":"132","endLine":9,"endColumn":14},{"ruleId":"129","severity":1,"message":"146","line":10,"column":8,"nodeType":"131","messageId":"132","endLine":10,"endColumn":20},{"ruleId":"129","severity":1,"message":"147","line":11,"column":8,"nodeType":"131","messageId":"132","endLine":11,"endColumn":18},"no-unused-vars","'router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Routes' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setExercises'. Either include it or remove the dependency array. If 'setExercises' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["148"],"'batteryLevel' is assigned a value but never used.","'connectedDevice' is assigned a value but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'FacebookIcon' is defined but never used.","'GoogleIcon' is defined but never used.",{"desc":"149","fix":"150"},"Update the dependencies array to be: [bodyPart, setExercises]",{"range":"151","text":"152"},[1273,1283],"[bodyPart, setExercises]"]